{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/input.js","webpack:///./src/attack.js","webpack:///./src/player.js","webpack:///./src/enemy.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Input","this","inputDirection","x","y","document","addEventListener","e","keyCode","Attack","playerX","playerY","vector","frameIndex","fireball","image","Image","width","height","src","projectile","sprite","position","hitbox","topLeft","bottomRight","ctx","drawImage","Player","direction","input","characterFrameIndex","alive","previousPosition","wizardCharacter","knightCharacter","deathCharacter","conga","updateHurtBox","getInputDirection","length","forEach","character","hurtbox","enemyX","enemyY","attackX","attackY","Math","abs","Enemy","first","skeletonEnemy","enemy","enemySpawnPoint","randomX","floor","random","randomY","Game","lose","player","dungeon","enemies","attacks","score","clearRect","draw","drawAttacks","drawEnemies","update","updateEnemies","determineDifficulty","attackNearestEnemy","updateAttacks","gameOver","outsideMap","playerCollision","revertMove","collision","topLeft1","bottomRight1","topLeft2","bottomRight2","difficulty","push","attack","pop","idxToRemove","indexOf","updateScore","splice","getElementById","innerHTML","GameView","lastRenderTime","updatesPerSecond","game","animate","currentTime","window","requestAnimationFrame","run","style","zIndex","removeEventListener","oldCanvas","remove","newCanvas","canvas","createElement","id","classList","add","createCanvas","getElementsByClassName","append","getContext","newGame","visibility","start","endScore","highScore","parseInt","localStorage","getItem","setItem","setTimeout"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Input {\n    constructor() {\n        // Sets initial direction to be moving up\n        this.inputDirection = { x: 0, y: -1 };\n    }\n\n    getInputDirection() {\n        document.addEventListener('keydown', (e) => {\n            switch (e.keyCode) {\n                case 37:\n                    if (this.inputDirection.x !== 0) break;  // Makes it so you can't move left when moving left or right\n                    this.inputDirection = { x: -1, y: 0 };\n                    break;\n                case 38:\n                    if (this.inputDirection.y !== 0) break; // Makes it so you can't move up when moving up or down\n                    this.inputDirection = { x: 0, y: -1 };\n                    break;\n                case 39:\n                    if (this.inputDirection.x !== 0) break; // Makes it so you can't move right when moving right or left\n                    this.inputDirection = { x: 1, y: 0 };\n                    break;\n                case 40:\n                    if (this.inputDirection.y !== 0) break; // Makes it so you can't move down when moving down or up\n                    this.inputDirection = { x: 0, y: 1 };\n                    break;\n            }\n        })\n\n        return this.inputDirection\n    }\n\n};","export default class Attack {\n    constructor(playerX, playerY, vector) {\n        this.frameIndex = 0;\n\n        const fireball = {\n            image: [new Image(), new Image()],\n            width: 11,\n            height: 11\n        };\n        fireball.image[0].src = './assets/fireball_0.png';\n        fireball.image[1].src = './assets/fireball_1.png';\n\n        this.projectile = { sprite: fireball };\n        this.projectile.position = { x: playerX, y: playerY };\n        this.projectile.hitbox = {\n            topLeft: this.projectile.position,\n            bottomRight: { x: this.projectile.position.x + 11, y: this.projectile.position.y + 11 }\n        };\n\n        this.projectile.vector = vector;\n    }\n\n    update() {\n        this.projectile.position.x += this.projectile.vector.x * 11;\n        this.projectile.position.y += this.projectile.vector.y * 11;\n        this.projectile.hitbox = {\n            topLeft: this.projectile.position,\n            bottomRight: { x: this.projectile.position.x + 11, y: this.projectile.position.y + 11 }\n        }\n\n        if (this.frameIndex = 0) {\n            this.frameIndex++;\n        } else {\n            this.frameIndex = 0;\n        }\n    }\n\n    draw(ctx) {\n        ctx.drawImage(\n            this.projectile.sprite.image[this.frameIndex],\n            0,\n            0,\n            this.projectile.sprite.width,\n            this.projectile.sprite.height,\n            this.projectile.position.x,\n            this.projectile.position.y,\n            this.projectile.sprite.width,\n            this.projectile.sprite.height\n        )\n    }\n}","import Input from './input';\nimport Attack from './attack';\n\nexport default class Player {\n    constructor() {\n        // this.x = 325;\n        // this.y = 325;\n        this.direction;\n        this.input = new Input();\n        this.characterFrameIndex = 0;\n        this.alive = true;\n        this.previousPosition;\n\n        const wizardCharacter = {\n            image: [new Image(), new Image(), new Image(), new Image()],\n            width: 32,\n            height: 48\n        };\n        wizardCharacter.image[0].src = './assets/wizard_f_0.png';\n        wizardCharacter.image[1].src = './assets/wizard_f_1.png';\n        wizardCharacter.image[2].src = './assets/wizard_f_2.png';\n        wizardCharacter.image[3].src = './assets/wizard_f_3.png';\n\n        const knightCharacter = {\n            image: [new Image(), new Image(), new Image(), new Image()],\n            width: 32,\n            height: 48\n        };\n        knightCharacter.image[0].src = './assets/knight_f_0.png';\n        knightCharacter.image[1].src = './assets/knight_f_1.png';\n        knightCharacter.image[2].src = './assets/knight_f_2.png';\n        knightCharacter.image[3].src = './assets/knight_f_3.png';\n\n        this.deathCharacter = {\n            image: [new Image(), new Image(), new Image(), new Image()],\n            width: 18,\n            height: 24\n        }\n        this.deathCharacter.image[0].src = './assets/follower-gravestone.png';\n        this.deathCharacter.image[1].src = './assets/follower-gravestone.png';\n        this.deathCharacter.image[2].src = './assets/follower-gravestone.png';\n        this.deathCharacter.image[3].src = './assets/follower-gravestone.png';\n\n        this.conga = [\n            { sprite: wizardCharacter, position: { x: 325, y: 325 } },\n            { sprite: knightCharacter, position: { x: 325, y: 360 } },\n            { sprite: wizardCharacter, position: { x: 325, y: 395 } }\n        ]\n\n        this.updateHurtBox();\n    }\n\n    update() {\n        if (this.alive) {\n\n            // previous position of last character in line\n            this.previousPosition = { x: this.conga[2].position.x, y: this.conga[2].position.y };\n\n            // gets input and updates direction\n            this.direction = this.input.getInputDirection();\n\n            // replaces characters in the line with the next person in line\n            for (let i = this.conga.length - 2; i >= 0; i--) {\n                this.conga[i + 1].position = { ...this.conga[i].position };\n            }\n            \n            // moves the head of the conga line\n            this.conga[0].position.x += (this.direction.x * 32);\n            this.conga[0].position.y += (this.direction.y * 32);\n            \n            this.updateHurtBox();\n\n            // changes the character sprite frame\n            if (this.characterFrameIndex === 3) {\n                this.characterFrameIndex = 0;\n            } else {\n                this.characterFrameIndex++;\n            }\n\n        }\n    }\n        \n    draw(ctx) {\n        this.conga.forEach((character) => {\n            ctx.drawImage(\n                character.sprite.image[this.characterFrameIndex],\n                0,\n                0,\n                character.sprite.width,\n                character.sprite.height,\n                character.position.x,\n                character.position.y,\n                character.sprite.width,\n                character.sprite.height\n            )\n        })\n    }\n\n    // used for death so graves appear at correct spot \n    revertMove() {\n        this.conga[0].position = this.conga[1].position;\n        this.conga[1].position = this.conga[2].position;\n        this.conga[2].position = this.previousPosition;\n    }\n\n    updateHurtBox() {\n        this.conga.forEach((character) => {\n            character.hurtbox = { \n                topLeft: { x: character.position.x, y: character.position.y },\n                bottomRight: { x: character.position.x + 32, y: character.position.y + 48 }\n            } \n        })\n    }\n\n    attack(enemyX, enemyY, playerX, playerY) {\n        let attackX = enemyX - playerX;\n        let attackY = enemyY - playerY;\n\n        // gets the vector direction the attack should travel\n        if (attackX > attackY) {\n            attackY = attackY / Math.abs(attackX);\n            attackX = attackX / Math.abs(attackX);\n        } else {\n            attackX = attackX / Math.abs(attackY);\n            attackY = attackY / Math.abs(attackY);\n        }\n        return new Attack (playerX, playerY, { x: attackX, y: attackY });\n    }\n}","export default class Enemy {\n    constructor(playerX, playerY, first=null) {\n        this.characterFrameIndex = 0;\n\n        const skeletonEnemy = {\n            image: [new Image(), new Image(), new Image(), new Image()],\n            width: 16,\n            height: 16\n        };\n        skeletonEnemy.image[0].src = './assets/dungeon_tileset/frames/skelet_idle_anim_f0.png';\n        skeletonEnemy.image[1].src = './assets/dungeon_tileset/frames/skelet_idle_anim_f1.png';\n        skeletonEnemy.image[2].src = './assets/dungeon_tileset/frames/skelet_idle_anim_f2.png';\n        skeletonEnemy.image[3].src = './assets/dungeon_tileset/frames/skelet_idle_anim_f3.png';\n\n        this.enemy = { sprite: skeletonEnemy };\n        this.enemy.position = this.enemySpawnPoint(playerX, playerY);\n        this.enemy.hitbox = {\n            topLeft: this.enemy.position,\n            bottomRight: { x: this.enemy.position.x + 16, y: this.enemy.position.y + 16}\n        }\n        if (first) this.enemy.position = { x: 10000, y: 10000}\n    }\n\n    enemySpawnPoint(playerX, playerY) {\n        let randomX = Math.floor(Math.random() * 634);\n        let randomY = Math.floor(Math.random() * 594);\n\n        while (Math.abs(playerX - randomX) < 64 && Math.abs(playerY - randomY)) {\n            randomX = Math.floor(Math.random() * 634);\n            randomY = Math.floor(Math.random() * 594);\n        }\n\n        return { x: randomX, y: randomY };\n    }\n\n    update() {\n        if (this.characterFrameIndex === 3) {\n            this.characterFrameIndex = 0;\n        } else {\n            this.characterFrameIndex++;\n        }\n    }\n\n    draw(ctx) {\n        ctx.drawImage(\n            this.enemy.sprite.image[this.characterFrameIndex],\n            0,\n            0,\n            this.enemy.sprite.width,\n            this.enemy.sprite.height,\n            this.enemy.position.x,\n            this.enemy.position.y,\n            this.enemy.sprite.width * 2,\n            this.enemy.sprite.height * 2\n        )\n    }\n}","import Player from './player';\nimport Enemy from './enemy';\n\nexport default class Game {\n    constructor(ctx, lose) {\n        this.ctx = ctx;\n        this.player = new Player();\n        this.dungeon = new Image();\n        this.enemies = [];\n        this.attacks = [];\n        this.score = 0;\n        this.dungeon.src = \"./assets/dungeon.png\";\n        this.lose = lose;\n    }\n\n    draw() {\n        // clears screen\n        this.ctx.clearRect(0, 0, 650, 650);\n\n        // draws dungeon\n        this.ctx.drawImage(\n            this.dungeon,\n            0,\n            0,\n            650,\n            650,\n        )\n\n        this.player.draw(this.ctx);\n        this.drawAttacks();\n        this.drawEnemies();\n    }\n\n    update() {\n        this.player.update();\n        this.updateEnemies(this.determineDifficulty()); // change this when difficulty is implemented\n        if (this.attacks.length === 0) {\n            this.attackNearestEnemy(this.player.conga[0].position.x, this.player.conga[0].position.y);\n        }\n        this.updateAttacks();\n        this.gameOver();\n\n    }\n\n    gameOver() {\n        if (this.outsideMap() || this.playerCollision()) {\n            this.player.alive = false;\n            this.attacks = [];\n            this.player.conga.forEach((character) => {\n                character.sprite = this.player.deathCharacter\n            })\n            if (!this.playerCollision()) this.player.revertMove();\n            this.lose(this.score);\n        }\n    }\n    \n    outsideMap() {\n        if (this.player.conga[0].position.x < 0) { // When dying off the left\n            return true;\n        } else if (this.player.conga[0].position.x > 613) { // When dying off the right\n            return true;\n        } else if (this.player.conga[0].position.y < 0) { // When dying off the top\n            return true;\n        } else if (this.player.conga[0].position.y > 549) { // When dying off the bottom\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    playerCollision() {\n        let hurtbox = this.player.conga[0].hurtbox;\n        for (let i = 1; i < this.enemies.length; i++) {\n            let hitbox = this.enemies[i].enemy.hitbox\n            if (this.collision(hurtbox.topLeft, hurtbox.bottomRight, hitbox.topLeft, hitbox.bottomRight)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    collision(topLeft1, bottomRight1, topLeft2, bottomRight2) {\n        // checks if object 1 is to the left or right of object 2\n        if (topLeft1.x > bottomRight2.x || bottomRight1.x < topLeft2.x) {\n            return false;\n        }\n\n        // checks if object 1 is above or below object 2\n        if (topLeft1.y > bottomRight2.y || bottomRight1.y < topLeft2.y) {\n            return false;\n        }\n        return true;\n    }\n\n    updateEnemies(difficulty) {\n        if (this.enemies.length === 0) this.enemies.push(new Enemy(this.player.conga[0].position.x, this.player.conga[0].position.y, true)) // when game starts add an enemy off screen \n        while (this.enemies.length < difficulty) {\n            this.enemies.push(new Enemy(this.player.conga[0].position.x, this.player.conga[0].position.y));\n        }\n        this.enemies.forEach((enemy) => {\n            enemy.update(this.ctx);\n        })\n    }\n\n    drawEnemies() {\n        this.enemies.forEach((enemy) => {\n            enemy.draw(this.ctx);\n        })\n    }\n\n    attackNearestEnemy(playerX, playerY) {\n        for (let i = 0; i < this.enemies.length; i++) {\n            if (Math.abs(this.enemies[i].enemy.position.x - playerX) < 100 && Math.abs(this.enemies[i].enemy.position.y - playerY) < 100) {\n                let attack = this.player.attack(this.enemies[i].enemy.position.x, this.enemies[i].enemy.position.y, playerX, playerY);\n                this.attacks.push(attack);\n                return;\n            }\n        }\n    }\n\n    drawAttacks() {\n        this.attacks.forEach((attack) => {\n            attack.draw(this.ctx);\n        })\n    }\n\n    updateAttacks() {\n        this.attacks.forEach((attack) => {\n            attack.update();\n\n            // if projectile goes off screen, remove it\n            if (attack.projectile.position.x > 650 || attack.projectile.position.x < 0 || attack.projectile.position.y > 610 || attack.projectile.position.y < 0) {\n                this.attacks.pop();     // change this once more than one person attacks\n            }\n\n            // checks if attack collides with enemy and removes if it does\n            let idxToRemove = null;\n            this.enemies.forEach((enemy) => {\n                if (this.collision(enemy.enemy.hitbox.topLeft, enemy.enemy.hitbox.bottomRight, attack.projectile.hitbox.topLeft, attack.projectile.hitbox.bottomRight)) {\n                    this.attacks.pop(); // change this once more than one person attacks\n                    idxToRemove = this.enemies.indexOf(enemy);\n                }\n            })\n            if (idxToRemove) { // removes enemy when hit\n                this.updateScore();\n                this.enemies.splice(idxToRemove, 1);\n            }\n        })\n    }\n\n    updateScore() {\n        this.score++;\n        document.getElementById('score').innerHTML = this.score;\n    }\n\n    determineDifficulty() {\n        return Math.floor((this.score / 2) + 2);\n    }\n}","import Game from './game';\n\nexport default class GameView {\n    constructor(ctx, lose) {\n        this.lastRenderTime = 0;\n        this.updatesPerSecond = 8;\n        this.score = 0;\n        this.game = new Game(ctx, lose);\n    }\n\n    start() {\n        this.animate();\n    }\n\n    animate(currentTime) {\n        window.requestAnimationFrame((currentTime) => {\n            this.animate(currentTime);\n        })\n        const secondsSinceLastRender = (currentTime - this.lastRenderTime) / 1000;\n        if (secondsSinceLastRender < 1 / this.updatesPerSecond) return;\n        this.lastRenderTime = currentTime;\n        // console.log('Render');\n\n        this.update();\n        this.draw();\n    }\n\n    update() {\n        this.game.update();\n    }\n\n    draw() {\n        this.game.draw();\n    }\n}","import GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    if (!localStorage.getItem('highScore')) localStorage.setItem('highScore', 0);\n    mainScreen();\n})\n\nfunction mainScreen() {\n    const startScreen = document.getElementById(\"start-screen\");\n    startScreen.style.visibility = 'visible';\n    setTimeout(() => {\n        document.addEventListener(\"keydown\", run)\n    }, 500);\n}\n\nfunction run() {\n    document.getElementById(\"game-over-modal\").style.zIndex = 0;\n    document.removeEventListener(\"keydown\", run);\n\n    let oldCanvas = document.getElementById('game-screen');\n    if (oldCanvas) oldCanvas.remove();\n    let newCanvas = createCanvas();\n    document.getElementsByClassName('canvas')[0].append(newCanvas);\n\n    const canvas = document.getElementById(\"game-screen\");\n    const ctx = canvas.getContext(\"2d\");\n    let newGame = new GameView(ctx, lose);\n    \n    document.getElementById(\"start-screen\").style.visibility = \"hidden\";\n    \n    newGame.start();\n}\n\n// function animation(e) {\n//     this.innerHTML = e.fall\n// }    \n\nfunction lose(score) {\n    let gameOver = document.getElementById(\"game-over-modal\");\n    let endScore = document.getElementById(\"end-score\");\n    let highScore = document.getElementById(\"high-score\");\n    endScore.innerHTML = `Score: ${score}`;\n    if (parseInt(localStorage.getItem('highScore')) < score) {\n        localStorage.setItem('highScore', score);\n        highScore.innerHTML = `High Score: ${localStorage.getItem('highScore')}`;\n    } else {\n        highScore.innerHTML = `High Score: ${localStorage.getItem('highScore')}`;\n    }\n    gameOver.style.zIndex = 11;\n    setTimeout(() => {\n        document.addEventListener(\"keydown\", run);\n    }, 500);\n}\n\nfunction createCanvas() {\n    let canvas = document.createElement('canvas');\n    canvas.id = 'game-screen';\n    canvas.classList.add('screen');\n    canvas.height = 610;\n    canvas.width = 650;\n    return canvas;\n}"],"sourceRoot":""}